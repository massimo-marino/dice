Test run on Dell XPS13 with 16.0 Gib of RAM, Intel® Core™ i7-7500U CPU @ 2.70GHz × 4, running Ubuntu 22.04.4 LTS

-------------------------------------------------------------------------------
Power Mode: Balanced
Engine: std::mt19937_64
unsigned int's

$ ./dice
----- runTestExamples - start -----
Non deterministic: Yes
Deterministic:     No

Test run with container: std::array size: 500000
1- std::generate:            0.012786   sec. - 12786009 nsec.
2- std_execution::seq:       0.0022367  sec. -  2236704 nsec.
3- std_execution::unseq:     0.00182354 sec. -  1823543 nsec.  *
4- std_execution::par:       0.00213179 sec. -  2131788 nsec.  **
5- std_execution::par_unseq: 0.00255619 sec. -  2556188 nsec.

Test run with container: std::array size: 500000
1- std::generate:            0.00316479 sec. - 3164788 nsec.
2- std_execution::seq:       0.00303232 sec. - 3032319 nsec.
3- std_execution::unseq:     0.00181972 sec. - 1819725 nsec.  *
4- std_execution::par:       0.0021156  sec. - 2115600 nsec.
5- std_execution::par_unseq: 0.00181983 sec. - 1819829 nsec.  **

Test run with container: std::deque size: 500000
1- std::generate:            0.003149   sec. - 3149005 nsec.
2- std_execution::seq:       0.00232432 sec. - 2324323 nsec.  **
3- std_execution::unseq:     0.002266   sec. - 2266002 nsec.  *
4- std_execution::par:       0.00256885 sec. - 2568853 nsec.
5- std_execution::par_unseq: 0.00258497 sec. - 2584969 nsec.

Test run with container: std::deque size: 500000
1- std::generate:            0.00253223 sec. - 2532228 nsec.
2- std_execution::seq:       0.00228625 sec. - 2286248 nsec.  **
3- std_execution::unseq:     0.00226553 sec. - 2265528 nsec.  *
4- std_execution::par:       0.00259026 sec. - 2590261 nsec.
5- std_execution::par_unseq: 0.00232201 sec. - 2322013 nsec.

Test run with container: std::vector size: 500000
1- std::generate:            0.00191877 sec. - 1918774 nsec.  *
2- std_execution::seq:       0.00236692 sec. - 2366920 nsec.
3- std_execution::unseq:     0.00225378 sec. - 2253776 nsec.
4- std_execution::par:       0.00227747 sec. - 2277468 nsec.
5- std_execution::par_unseq: 0.00192899 sec. - 1928985 nsec.  **

Test run with container: std::vector size: 500000
1- std::generate:            0.00251221 sec. - 2512208 nsec.
2- std_execution::seq:       0.00371098 sec. - 3710982 nsec.
3- std_execution::unseq:     0.00233822 sec. - 2338219 nsec.
4- std_execution::par:       0.00231897 sec. - 2318972 nsec.  **
5- std_execution::par_unseq: 0.00191931 sec. - 1919307 nsec.  *

Test run with container: std::deque size: 2000000000
1- std::generate:            10.4157  sec. - 10415695216 nsec.
2- std_execution::seq:        9.49698 sec. -  9496983733 nsec.
3- std_execution::unseq:      9.08341 sec. -  9083412683 nsec.  *
4- std_execution::par:       10.3021  sec. - 10302074364 nsec.
5- std_execution::par_unseq:  9.09567 sec. -  9095673707 nsec.  **

Test run with container: std::deque size: 2000000000
1- std::generate:             9.8338  sec. -  9833803904 nsec.
2- std_execution::seq:        9.17105 sec. -  9171045260 nsec.
3- std_execution::unseq:      9.08122 sec. -  9081218221 nsec.  *
4- std_execution::par:       10.2943  sec. - 10294258014 nsec.
5- std_execution::par_unseq:  9.08829 sec. -  9088285608 nsec.  **

Test run with container: std::vector size: 2000000000
1- std::generate:            7.30975 sec. - 7309750657 nsec.  *
2- std_execution::seq:       9.17635 sec. - 9176354037 nsec.
3- std_execution::unseq:     9.01787 sec. - 9017866673 nsec.
4- std_execution::par:       9.02071 sec. - 9020714704 nsec.
5- std_execution::par_unseq: 7.56899 sec. - 7568994808 nsec.

Test run with container: std::vector size: 2000000000
1- std::generate:            7.3248  sec. - 7324797410 nsec.  *
2- std_execution::seq:       9.18991 sec. - 9189908202 nsec.
3- std_execution::unseq:     9.01458 sec. - 9014576208 nsec.
4- std_execution::par:       9.00792 sec. - 9007923519 nsec.
5- std_execution::par_unseq: 7.56954 sec. - 7569539200 nsec.  **

----- runTestExamples - end -----

----- makeDiceRolls - start -----
container at 0x7ffefeee1990: results (20/20): 855 1020 106 1020 587 870 378 701 1042 807 204 889 184 309 286 961 241 706 987 800 
----- makeDiceRolls - end -----

----- makeDiceRolls_2 - start -----
makeDiceRolls_2: BEFORE - size: 0 capacity: 0 at 0x7ffefeee1a70
makeDiceRolls_2: AFTER - size: 20 capacity: 20 at 0x7ffefeee1a70
container at 0x7ffefeee1a70: results (20/20): 1037 469 798 381 162 181 199 724 769 97 668 378 1041 852 503 742 1042 87 490 439 
----- makeDiceRolls_2 - end -----

----- runDiceRollerExample - start -----
diceRoller::info: dice at 0x7ffefeee1a88 with 1000 sides generates 20 values from 55 in container at 0x7ffefeee2468 with size: 20 and capacity: 20
container at 0x7ffefeee2468: results (20/20): 868 325 60 896 261 864 671 862 982 650 602 428 244 343 707 700 243 911 520 336 
container at 0x7ffefeee2468: results (20/20): 868 325 60 896 261 864 671 862 982 650 602 428 244 343 707 700 243 911 520 336 
container at 0x7ffefeee1990: results (20/20): 868 325 60 896 261 864 671 862 982 650 602 428 244 343 707 700 243 911 520 336 
container at 0x7ffefeee19b0: results (20/20): 518 201 785 519 545 963 628 254 200 156 303 702 776 408 837 529 780 352 943 162 
container at 0x7ffefeee19d0: results (20/20): 478 817 744 972 506 519 864 321 178 568 121 420 487 430 587 239 363 720 604 585 
rolls_1 at: 0x7ffefeee2468 must be equal to rolls_2 at 0x7ffefeee2468: true
rolls_2 at: 0x7ffefeee2468 must be equal to rolls_1 at 0x7ffefeee2468: true
rolls_3 at: 0x7ffefeee1990 must not be equal to rolls_1 at 0x7ffefeee2468 and rolls_2 at 0x7ffefeee2468: true
rolls_4 at: 0x7ffefeee19b0
rolls_5 at: 0x7ffefeee19d0
----- runDiceRollerExample - end -----

-------------------------------------------------------------------------------
Power Mode: Performance
Engine: std::mt19937_64
unsigned int's

$ ./dice
----- runTestExamples - start -----
Non deterministic: Yes
Deterministic:     No

Test run with container: std::array size: 500000
1- std::generate:            0.00265695 sec. - 2656951 nsec.
2- std_execution::seq:       0.00214723 sec. - 2147232 nsec.
3- std_execution::unseq:     0.00182332 sec. - 1823321 nsec.  *
4- std_execution::par:       0.00211163 sec. - 2111626 nsec.  **
5- std_execution::par_unseq: 0.00247747 sec. - 2477470 nsec.

Test run with container: std::array size: 500000
1- std::generate:            0.00182623 sec. - 1826229 nsec.  **
2- std_execution::seq:       0.00218994 sec. - 2189937 nsec.
3- std_execution::unseq:     0.00198525 sec. - 1985248 nsec.
4- std_execution::par:       0.00211297 sec. - 2112969 nsec.
5- std_execution::par_unseq: 0.00181929 sec. - 1819291 nsec.  *

Test run with container: std::deque size: 500000
1- std::generate:            0.00246176 sec. - 2461765 nsec.  *
2- std_execution::seq:       0.0025536  sec. - 2553603 nsec.  **
3- std_execution::unseq:     0.00286839 sec. - 2868389 nsec.
4- std_execution::par:       0.00257045 sec. - 2570452 nsec.
5- std_execution::par_unseq: 0.00258184 sec. - 2581836 nsec.

Test run with container: std::deque size: 500000
1- std::generate:            0.00248176 sec. - 2481757 nsec.
2- std_execution::seq:       0.00239661 sec. - 2396610 nsec.  **
3- std_execution::unseq:     0.00226595 sec. - 2265946 nsec.  *
4- std_execution::par:       0.00258796 sec. - 2587957 nsec.
5- std_execution::par_unseq: 0.00302367 sec. - 3023675 nsec.

Test run with container: std::vector size: 500000
1- std::generate:            0.00184419 sec. - 1844194 nsec.  *
2- std_execution::seq:       0.00231188 sec. - 2311879 nsec.
3- std_execution::unseq:     0.00224992 sec. - 2249924 nsec.  **
4- std_execution::par:       0.00225625 sec. - 2256253 nsec.
5- std_execution::par_unseq: 0.00249215 sec. - 2492155 nsec.

Test run with container: std::vector size: 500000
1- std::generate:            0.00187397 sec. - 1873973 nsec.  *
2- std_execution::seq:       0.0023496  sec. - 2349600 nsec.
3- std_execution::unseq:     0.0030302  sec. - 3030196 nsec.
4- std_execution::par:       0.00239364 sec. - 2393639 nsec.
5- std_execution::par_unseq: 0.00189595 sec. - 1895945 nsec.  **

Test run with container: std::deque size: 2000000000
1- std::generate:             9.83936 sec. -  9839359329 nsec.
2- std_execution::seq:        9.16787 sec. -  9167872780 nsec.
3- std_execution::unseq:      9.10704 sec. -  9107035382 nsec.  **
4- std_execution::par:       10.3043  sec. - 10304292872 nsec.
5- std_execution::par_unseq:  9.10471 sec. -  9104705402 nsec.  *

Test run with container: std::deque size: 2000000000
1- std::generate:             9.84499 sec. -  9844989000 nsec.
2- std_execution::seq:        9.1719  sec. -  9171895474 nsec.
3- std_execution::unseq:      9.09265 sec. -  9092653152 nsec.  *
4- std_execution::par:       10.3056  sec. - 10305641202 nsec.
5- std_execution::par_unseq:  9.1032  sec. -  9103199473 nsec.  **

Test run with container: std::vector size: 2000000000
1- std::generate:            7.32278 sec. - 7322782239 nsec.  *
2- std_execution::seq:       9.18522 sec. - 9185222701 nsec.
3- std_execution::unseq:     9.01989 sec. - 9019885628 nsec.
4- std_execution::par:       9.0267  sec. - 9026704555 nsec.
5- std_execution::par_unseq: 7.58355 sec. - 7583548231 nsec.  **

Test run with container: std::vector size: 2000000000
1- std::generate:            7.32638 sec. - 7326380541 nsec.  *
2- std_execution::seq:       9.1807  sec. - 9180701116 nsec.
3- std_execution::unseq:     9.02286 sec. - 9022859926 nsec.
4- std_execution::par:       9.01453 sec. - 9014534738 nsec.
5- std_execution::par_unseq: 7.57611 sec. - 7576113329 nsec.  **

----- runTestExamples - end -----

----- makeDiceRolls - start -----
container at 0x7ffe7af23020: results (20/20): 677 1005 931 926 720 1036 327 308 310 992 539 963 858 1018 92 565 1002 578 944 963 
----- makeDiceRolls - end -----

----- makeDiceRolls_2 - start -----
makeDiceRolls_2: BEFORE - size: 0 capacity: 0 at 0x7ffe7af23100
makeDiceRolls_2: AFTER - size: 20 capacity: 20 at 0x7ffe7af23100
container at 0x7ffe7af23100: results (20/20): 887 101 634 64 605 320 839 516 423 418 461 718 142 825 616 109 933 498 877 495 
----- makeDiceRolls_2 - end -----

----- runDiceRollerExample - start -----
diceRoller::info: dice at 0x7ffe7af23118 with 1000 sides generates 20 values from 55 in container at 0x7ffe7af23af8 with size: 20 and capacity: 20
container at 0x7ffe7af23af8: results (20/20): 167 773 532 96 211 693 510 815 665 377 745 74 792 585 202 820 369 427 744 597 
container at 0x7ffe7af23af8: results (20/20): 167 773 532 96 211 693 510 815 665 377 745 74 792 585 202 820 369 427 744 597 
container at 0x7ffe7af23020: results (20/20): 167 773 532 96 211 693 510 815 665 377 745 74 792 585 202 820 369 427 744 597 
container at 0x7ffe7af23040: results (20/20): 552 393 465 847 837 692 908 419 193 285 702 974 255 910 181 254 114 718 1024 248 
container at 0x7ffe7af23060: results (20/20): 358 1015 486 101 1052 116 540 209 500 321 715 705 807 650 413 72 170 863 907 1043 
rolls_1 at: 0x7ffe7af23af8 must be equal to rolls_2 at 0x7ffe7af23af8: true
rolls_2 at: 0x7ffe7af23af8 must be equal to rolls_1 at 0x7ffe7af23af8: true
rolls_3 at: 0x7ffe7af23020 must not be equal to rolls_1 at 0x7ffe7af23af8 and rolls_2 at 0x7ffe7af23af8: true
rolls_4 at: 0x7ffe7af23040
rolls_5 at: 0x7ffe7af23060
----- runDiceRollerExample - end -----

